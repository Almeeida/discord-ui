{"version":3,"sources":["assets/logo.png","components/Layout/styles.ts","components/GuildButton/styles.ts","components/GuildButton/index.tsx","components/GuildList/styles.ts","components/GuildList/index.tsx","components/GuildName/styles.ts","components/GuildName/index.tsx","components/ChannelInfo/styles.ts","components/ChannelInfo/index.tsx","components/ChannelButton/styles.ts","components/ChannelButton/index.tsx","components/ChannelList/styles.ts","components/ChannelList/index.tsx","components/UserInfo/styles.ts","components/UserInfo/index.tsx","components/UserList/styles.ts","components/UserList/index.tsx","components/ChannelMessage/styles.ts","components/ChannelMessage/index.tsx","components/ChannelData/styles.ts","components/ChannelData/index.tsx","components/Layout/index.tsx","styles/global.ts","App.tsx","index.tsx"],"names":["module","exports","Grid","styled","div","Button","button","p","isHome","hasNotifications","mentions","ServerButton","selected","className","src","logo","alt","Container","Separator","GuildList","GuildButton","Title","h1","ExpandIcon","ExpandMore","GuildName","Description","span","HashtagIcon","Hashtag","ChannelInfo","InviteIcon","PersonAdd","SettingsIcon","Settings","ChannelButton","channelName","Category","CreateChannelIcon","Add","ChannelList","Profile","Avatar","UserData","Icons","MicIcon","Mic","HeadsetIcon","Headset","UserInfo","Role","User","UserRow","displayName","isBot","UserList","Message","Header","Content","Mention","ChannelMessage","author","date","content","hasMention","Input","input","InputIcon","AlternateEmail","InputWrapper","Messages","ChannelData","messagesRef","useRef","useEffect","current","scrollTop","scrollHeight","ref","Array","from","keys","map","n","key","type","placeholder","Layout","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kGAAAA,EAAOC,QAAU,IAA0B,kC,uZCUpC,IAAMC,EAAOC,IAAOC,IAAV,K,8nCCNV,IAAMC,EAASF,IAAOG,OAAV,KAYG,SAACC,GAAD,sBAA+BA,EAAEC,OAAS,UAAY,UAAtD,QAsBP,SAACD,GAAD,OAAsBA,EAAEE,iBAAmB,SAAW,UAsBrD,SAACF,GAAD,OAAsBA,EAAEG,UAAYH,EAAEG,YACvC,SAACH,GAAD,OAAsBA,EAAEG,UAAYH,EAAEG,SAAW,EAAI,SAAW,UAQvD,SAACH,GAAD,sBAA+BA,EAAEC,OAAS,UAAY,UAAtD,Q,iBCtCTG,EAlByB,SAAC,GAKlC,IAJLC,EAII,EAJJA,SACAJ,EAGI,EAHJA,OACAC,EAEI,EAFJA,iBACAC,EACI,EADJA,SAEA,OACE,kBAACL,EAAD,CACEG,OAAQA,EACRC,iBAAkBA,EAClBC,SAAUA,EACVG,UAAWD,EAAW,SAAW,IAEhCJ,GAAU,yBAAKM,IAAKC,IAAMC,IAAI,c,8dCxB9B,IAAMC,EAAYd,IAAOC,IAAV,KAkBTc,EAAYf,IAAOC,IAAV,KCOPe,EArBO,WACpB,OACE,kBAACF,EAAD,KACE,kBAACG,EAAD,CAAaZ,QAAM,IAEnB,kBAACU,EAAD,MAEA,kBAACE,EAAD,MACA,kBAACA,EAAD,CAAaX,kBAAgB,IAC7B,kBAACW,EAAD,CAAaV,SAAU,IACvB,kBAACU,EAAD,MACA,kBAACA,EAAD,MACA,kBAACA,EAAD,MACA,kBAACA,EAAD,CAAaX,kBAAgB,IAC7B,kBAACW,EAAD,MACA,kBAACA,EAAD,CAAaV,SAAU,IACvB,kBAACU,EAAD,Q,qkBCnBC,IAAMH,EAAYd,IAAOC,IAAV,KAYTiB,EAAQlB,IAAOmB,GAAV,KAOLC,EAAapB,YAAOqB,IAAPrB,CAAH,KCRRsB,EAVO,WACpB,OACE,kBAAC,EAAD,KACE,kBAACJ,EAAD,oBAEA,kBAACE,EAAD,Q,q1BCNC,IAAMN,EAAYd,IAAOC,IAAV,KAaTsB,EAAcvB,IAAOwB,KAAV,KAKXC,EAAczB,YAAO0B,IAAP1B,CAAH,KAOXe,EAAYf,IAAOC,IAAV,KAUTiB,EAAQlB,IAAOmB,GAAV,KCpBHQ,EAdS,WACtB,OACE,kBAAC,EAAD,KACE,kBAACF,EAAD,MAEA,kBAAC,EAAD,gBAEA,kBAAC,EAAD,MAEA,kBAACF,EAAD,2B,0pCCTC,IAAMT,EAAYd,IAAOC,IAAV,KAkCTwB,EAAczB,YAAO0B,IAAP1B,CAAH,KAOX4B,EAAa5B,YAAO6B,IAAP7B,CAAH,KAcV8B,EAAe9B,YAAO+B,IAAP/B,CAAH,KC/BVgC,EAnBiC,SAAC,GAG1C,IAFLC,EAEI,EAFJA,YACAxB,EACI,EADJA,SAEA,OACE,kBAAC,EAAD,CAAWC,UAAWD,EAAW,SAAW,IAC1C,6BACE,kBAAC,EAAD,MACA,8BAAOwB,IAGT,6BACE,kBAACL,EAAD,MACA,kBAACE,EAAD,S,ypBCnBD,IAAMhB,GAAYd,IAAOC,IAAV,MAUTiC,GAAWlC,IAAOC,IAAV,MAeRkC,GAAoBnC,YAAOoC,IAAPpC,CAAH,KCLfqC,GAjBS,WACtB,OACE,kBAAC,GAAD,KACE,kBAACH,GAAD,KACE,+CACA,kBAACC,GAAD,OAGF,kBAAC,EAAD,CAAeF,YAAY,YAC3B,kBAAC,EAAD,CAAeA,YAAY,aAC3B,kBAAC,EAAD,CAAeA,YAAY,kBAC3B,kBAAC,EAAD,CAAeA,YAAY,UAC3B,kBAAC,EAAD,CAAeA,YAAY,a,iuDCf1B,IAAMnB,GAAYd,IAAOC,IAAV,MAYTqC,GAAUtC,IAAOC,IAAV,MAKPsC,GAASvC,IAAOC,IAAV,MAQNuC,GAAWxC,IAAOC,IAAV,MAkBRwC,GAAQzC,IAAOC,IAAV,MASLyC,GAAU1C,YAAO2C,KAAP3C,CAAH,MAeP4C,GAAc5C,YAAO6C,KAAP7C,CAAH,MAeX8B,GAAe9B,YAAO+B,IAAP/B,CAAH,MCpDV8C,GApBM,WACnB,OACE,kBAAC,GAAD,KACE,kBAACR,GAAD,KACE,kBAACC,GAAD,MACA,kBAACC,GAAD,KACE,2CACA,yCAIJ,kBAACC,GAAD,KACE,kBAACC,GAAD,MACA,kBAACE,GAAD,MACA,kBAAC,GAAD,S,8pDCzBD,IAAM9B,GAAYd,IAAOC,IAAV,MA0BT8C,GAAO/C,IAAOwB,KAAV,MASJwB,GAAOhD,IAAOC,IAAV,MAyCJsC,GAASvC,IAAOC,IAAV,MCrEbgD,GAA2B,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MAC/C,OACE,kBAACH,GAAD,KACE,kBAAC,GAAD,CAAQtC,UAAWyC,EAAQ,MAAQ,KAEnC,gCAASD,GAERC,GAAS,uCA0BDC,GArBM,WACnB,OACE,kBAAC,GAAD,KACE,kBAACL,GAAD,mBACA,kBAAC,GAAD,CAASG,YAAY,YAErB,kBAACH,GAAD,qBACA,kBAAC,GAAD,CAASG,YAAY,YAAYC,OAAK,IACtC,kBAAC,GAAD,CAASD,YAAY,cACrB,kBAAC,GAAD,CAASA,YAAY,cACrB,kBAAC,GAAD,CAASA,YAAY,YAAYC,OAAK,IACtC,kBAAC,GAAD,CAASD,YAAY,cACrB,kBAAC,GAAD,CAASA,YAAY,cACrB,kBAAC,GAAD,CAASA,YAAY,cACrB,kBAAC,GAAD,CAASA,YAAY,YAAYC,OAAK,IACtC,kBAAC,GAAD,CAASD,YAAY,eACrB,kBAAC,GAAD,CAASA,YAAY,iB,smDCnCpB,IAAMpC,GAAYd,IAAOC,IAAV,MAqBTsC,GAASvC,IAAOC,IAAV,MAYNoD,GAAUrD,IAAOC,IAAV,MAUPqD,GAAStD,IAAOC,IAAV,MA6BNsD,GAAUvD,IAAOC,IAAV,MAMPuD,GAAUxD,IAAOwB,KAAV,MCzCLiC,GA1B4B,SAAC,GAMrC,IALLC,EAKI,EALJA,OACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,WACAV,EACI,EADJA,MAEA,OACE,kBAAC,GAAD,CAAWzC,UAAWmD,EAAa,UAAY,IAC7C,kBAAC,GAAD,CAAQnD,UAAWyC,EAAQ,MAAQ,KAEnC,kBAACE,GAAD,KACE,kBAACC,GAAD,KACE,gCAASI,GAERP,EAAQ,qCAAmB,GAE5B,8BAAOQ,IAGT,kBAACJ,GAAD,KAAUK,M,kyCC9BX,IAAM9C,GAAYd,IAAOC,IAAV,MAUT6D,GAAQ9D,IAAO+D,MAAV,MAwBLC,GAAYhE,YAAOiE,KAAPjE,CAAH,MAOTkE,GAAelE,IAAOC,IAAV,MAKZkE,GAAWnE,IAAOC,IAAV,MCONmE,GAlDS,WACtB,IAAMC,EAAcC,mBAUpB,OARAC,qBAAU,WACR,IAAMtE,EAAMoE,EAAYG,QAEpBvE,IACFA,EAAIwE,UAAYxE,EAAIyE,gBAErB,CAACL,IAGF,kBAAC,GAAD,KACE,kBAACF,GAAD,CAAUQ,IAAKN,GACZO,MAAMC,KAAKD,MAAM,IAAIE,QAAQC,KAAI,SAACC,GAAD,OAChC,kBAAC,GAAD,CACEC,IAAKD,EACLtB,OAAO,UACPE,QAAQ,iBACRD,KAAK,sBAIT,kBAAC,GAAD,CACED,OAAO,YACPE,QAAQ,yCACRD,KAAK,iBACLR,OAAK,IAGP,kBAAC,GAAD,CACEO,OAAO,YACPE,QACE,oCACE,kBAACJ,GAAD,iBADF,qBAIFG,KAAK,iBACLE,YAAU,KAId,kBAACK,GAAD,KACE,kBAACJ,GAAD,CAAOoB,KAAK,OAAOC,YAAY,qBAC/B,kBAACnB,GAAD,SCxBOoB,GAdI,WACjB,OACE,kBAACrF,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,Q,utBCnBSsF,mBAAf,MCceC,OAVf,WACE,OACE,oCACE,kBAAC,GAAD,MAEA,kBAAC,GAAD,QCNNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.f92baa8f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f4990c85.png\";","import styled from \"styled-components\";\r\n\r\n// GL = Guild List\r\n// GN = Guild Name\r\n// CI = Channel Info\r\n// CL = Channel List\r\n// CD = Channel Data\r\n// UL = User List\r\n// UI = User Info\r\n\r\nexport const Grid = styled.div`\r\n  display: grid;\r\n\r\n  grid-template-columns: 71px 240px auto 240px;\r\n  grid-template-rows: 46px auto 52px;\r\n\r\n  grid-template-areas:\r\n    'GL GN CI CI'\r\n    'GL CL CD UL'\r\n    'GL UI CD UL';\r\n\r\n  height: 100%\r\n`;\r\n","import styled from 'styled-components';\n\nimport { ButtonOptions } from '.';\n\nexport const Button = styled.button<ButtonOptions>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n\n  width: 48px;\n  height: 48px;\n  border-radius: 50%;\n\n  margin-bottom: 8px;\n\n  background-color: ${(p: ButtonOptions) => `var(--${p.isHome ? 'quinary' : 'primary'})`};\n\n  position: relative;\n  cursor: pointer;\n\n  > img {\n    width: 24px;\n    height: 24px;\n  }\n\n  &::before {\n    width: 9px;\n    height: 9px;\n\n    position: absolute;\n    left: -17px;\n    top: calc(50% - 4.5px);\n\n    background-color: var(--white);\n    border-radius: 50%;\n\n    content: '';\n    display: ${(p: ButtonOptions) => p.hasNotifications ? 'inline' : 'none'};\n  }\n\n  &::after {\n    background-color: var(--notification);\n    width: auto;\n    height: 16px;\n\n    padding: 0 4px;\n\n    position: absolute;\n    bottom: -4px;\n    right: -4px;\n\n    border-radius: 12px;\n    border: 4px solid var(--quaternary);\n\n    text-align: right;\n    font-size: 13px;\n    font-weight: bold;\n    color: var(--white);\n\n    content: '${(p: ButtonOptions) => p.mentions && p.mentions}';\n    display: ${(p: ButtonOptions) => p.mentions && p.mentions > 0 ? 'inline' : 'none'}\n  }\n\n  transition: border-radius 0.2s, background-color 0.2s;\n\n  &.active,\n  &:hover {\n    border-radius: 16px;\n    background-color: ${(p: ButtonOptions) => `var(--${p.isHome ? 'quinary' : 'discord'})`}\n  };\n`;\n","import React, { FC } from 'react';\n\nimport { Button } from './styles';\n\nimport logo from '../../assets/logo.png'\n\nexport interface ButtonOptions {\n  selected?: boolean;\n  isHome?: boolean;\n  hasNotifications?: boolean;\n  mentions?: number;\n}\n\nconst ServerButton: FC<ButtonOptions> = ({\n  selected,\n  isHome,\n  hasNotifications,\n  mentions,\n}) => {\n  return (\n    <Button\n      isHome={isHome}\n      hasNotifications={hasNotifications}\n      mentions={mentions}\n      className={selected ? 'active' : ''}\n    >\n      {isHome && <img src={logo} alt=\"Almeida\" />}\n    </Button>\n  );\n};\n\nexport default ServerButton;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  grid-area: GL;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  background-color: var(--tertiary);\n  padding: 11px 0;\n\n  max-height: 100vh;\n  overflow-y: scroll;\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nexport const Separator = styled.div`\n  width: 32px;\n  border-bottom: 2px solid var(--quaternary);\n\n  margin-bottom: 8px;\n`;\n","import React, { FC } from 'react';\n\nimport GuildButton from '../GuildButton';\n\nimport { Container, Separator } from './styles';\n\nconst GuildList: FC = () => {\n  return (\n    <Container>\n      <GuildButton isHome />\n\n      <Separator />\n\n      <GuildButton />\n      <GuildButton hasNotifications />\n      <GuildButton mentions={6} />\n      <GuildButton />\n      <GuildButton />\n      <GuildButton />\n      <GuildButton hasNotifications />\n      <GuildButton />\n      <GuildButton mentions={3} />\n      <GuildButton />\n    </Container>\n  );\n};\n\nexport default GuildList;\n","import styled from 'styled-components';\nimport { ExpandMore } from 'styled-icons/material';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  padding: 0 11px 0 16px;\n  background-color: var(--secondary);\n\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 1px 0px 0px;\n  z-index: 2;\n`;\n\nexport const Title = styled.h1`\n  font-size: 16px;\n  font-weight: bold;\n\n  color: var(--white);\n`;\n\nexport const ExpandIcon = styled(ExpandMore)`\n  width: 28px;\n  height: 28px;\n\n  color: var(--white);\n  cursor: pointer;\n`;\n","import React, { FC } from 'react';\n\nimport { Container, ExpandIcon, Title } from './styles';\n\nconst GuildName: FC = () => {\n  return (\n    <Container>\n      <Title>Almeida | 0</Title>\n\n      <ExpandIcon />\n    </Container>\n  );\n};\n\nexport default GuildName;\n","import styled from 'styled-components';\nimport { Hashtag } from 'styled-icons/heroicons-outline';\n\nexport const Container = styled.div`\n  grid-area: CI;\n\n  display: flex;\n  align-items: center;\n\n  padding: 0 17px;\n  background-color: var(--primary);\n\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 1px 0px 0px;\n  z-index: 2;\n`;\n\nexport const Description = styled.span`\n  font-size: 15px;\n  color: var(--gray);\n`;\n\nexport const HashtagIcon = styled(Hashtag)`\n  width: 24px;\n  height: 24px;\n\n  color: var(--symbol);\n`;\n\nexport const Separator = styled.div`\n  width: 1px;\n  height: 24px;\n\n  background-color: var(--white);\n  opacity: 0.2;\n\n  margin: 0 13px;\n`;\n\nexport const Title = styled.h1`\n  margin-left: 9px;\n\n  font-size: 16px;\n  font-weight: bold;\n\n  color: var(--white);\n`;\n","import React, { FC } from 'react';\n\nimport { Container, Description, HashtagIcon, Separator, Title } from './styles';\n\nconst ChannelInfo: FC = () => {\n  return (\n    <Container>\n      <HashtagIcon />\n\n      <Title>general</Title>\n\n      <Separator />\n\n      <Description>The general chat</Description>\n    </Container>\n  );\n}\n\nexport default ChannelInfo;\n","import styled from 'styled-components';\nimport { Hashtag } from 'styled-icons/heroicons-outline';\nimport { PersonAdd, Settings } from 'styled-icons/material';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  cursor: pointer;\n\n  padding: 5px 3px;\n  border-radius: 5px;\n\n  background-color: transparent;\n\n  transition: background-color 0.2s;\n\n  > div {\n    display: flex;\n    align-items: center;\n  }\n\n  > div span {\n    margin-left: 5px;\n    color: var(--senary);\n  }\n\n  &:hover,\n  &.active {\n    background-color: var(--quinary);\n\n    > div span {\n      color: var(--white);\n    }\n  }\n`;\n\nexport const HashtagIcon = styled(Hashtag)`\n  width: 20px;\n  height: 20px;\n\n  color: var(--symbol);\n`;\n\nexport const InviteIcon = styled(PersonAdd)`\n  width: 16px;\n  height: 16px;\n\n  color: var(--symbol);\n  cursor: pointer;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: var(--white);\n  }\n`;\n\nexport const SettingsIcon = styled(Settings)`\n  width: 16px;\n  height: 16px;\n\n  margin-left: 4px;\n\n  color: var(--symbol);\n  cursor: pointer;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: var(--white);\n  }\n`;\n","import React, { FC } from 'react';\n\nimport { Container, HashtagIcon, InviteIcon, SettingsIcon } from './styles';\n\nexport interface ChannelButtonOptions {\n  channelName: string;\n  selected?: boolean;\n}\n\nconst ChannelButton: FC<ChannelButtonOptions> = ({\n  channelName,\n  selected,\n}) => {\n  return (\n    <Container className={selected ? 'active' : ''}>\n      <div>\n        <HashtagIcon />\n        <span>{channelName}</span>\n      </div>\n\n      <div>\n        <InviteIcon />\n        <SettingsIcon />\n      </div>\n    </Container>\n  );\n};\n\nexport default ChannelButton;\n","import styled from 'styled-components';\nimport { Add } from 'styled-icons/material';\n\nexport const Container = styled.div`\n  grid-area: CL;\n\n  display: flex;\n  flex-direction: column;\n\n  padding: 24px 9.5px 0 16px;\n  background-color: var(--secondary);\n`;\n\nexport const Category = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  margin-bottom: 6px;\n\n  > span {\n    text-transform: uppercase;\n    font-size: 12px;\n    font-weight: 500;\n    color: var(--gray);\n  }\n`;\n\nexport const CreateChannelIcon = styled(Add)`\n  width: 21px;\n  height: 21px;\n\n  color: var(--symbol);\n  cursor: pointer;\n`;\n","import React, { FC } from 'react';\n\nimport ChannelButton from '../ChannelButton';\n\nimport { Category, Container, CreateChannelIcon } from './styles';\n\nconst ChannelList: FC = () => {\n  return (\n    <Container>\n      <Category>\n        <span>Text Channels</span>\n        <CreateChannelIcon />\n      </Category>\n\n      <ChannelButton channelName=\"general\" />\n      <ChannelButton channelName=\"commands\" />\n      <ChannelButton channelName=\"announcements\" />\n      <ChannelButton channelName=\"stuff\" />\n      <ChannelButton channelName=\"things\" />\n    </Container>\n  );\n}\n\nexport default ChannelList;\n","import styled from 'styled-components';\nimport { Mic, Headset, Settings } from 'styled-icons/material';\n\nexport const Container = styled.div`\n  grid-area: UI;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  padding: 10px;\n  background-color: var(--quaternary);\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 1px 0px 0px;\n`;\n\nexport const Profile = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Avatar = styled.div`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n\n  background-color: var(--gray);\n`;\n\nexport const UserData = styled.div`\n  margin-left: 8px;\n\n  display: flex;\n  flex-direction: column;\n\n  > strong {\n    color: var(--white);\n    font-size: 13px;\n    display: block;\n  }\n\n  > span {\n    color: var(--gray);\n    font-size: 13px;\n  }\n`;\n\nexport const Icons = styled.div`\n  display: flex;\n  align-items: center;\n\n  > svg:not(:first-child) {\n    margin-left: 7px;\n  }\n`;\n\nexport const MicIcon = styled(Mic)`\n  width: 20px;\n  height: 20px;\n\n  color: var(--white);\n  opacity: 0.7;\n  cursor: pointer;\n\n  transition: opacity 0.2s;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const HeadsetIcon = styled(Headset)`\n  width: 20px;\n  height: 20px;\n\n  color: var(--white);\n  opacity: 0.7;\n  cursor: pointer;\n\n  transition: opacity 0.2s;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SettingsIcon = styled(Settings)`\n  width: 20px;\n  height: 20px;\n\n  color: var(--white);\n  opacity: 0.7;\n  cursor: pointer;\n\n  transition: opacity 0.2s;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n","import React, { FC } from 'react';\n\nimport {\n  Container,\n  Profile,\n  Avatar,\n  UserData,\n  Icons,\n  MicIcon,\n  HeadsetIcon,\n  SettingsIcon,\n} from './styles';\n\nconst UserInfo: FC = () => {\n  return (\n    <Container>\n      <Profile>\n        <Avatar />\n        <UserData>\n          <strong>Almeida</strong>\n          <span>#0001</span>\n        </UserData>\n      </Profile>\n\n      <Icons>\n        <MicIcon />\n        <HeadsetIcon />\n        <SettingsIcon />\n      </Icons>\n    </Container>\n  );\n};\n\nexport default UserInfo;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  grid-area: UL;\n\n  display: flex;\n  flex-direction: column;\n\n  padding: 3px 6px 0 16px;\n  background-color: var(--secondary);\n\n  max-height: calc(100vh - 46px);\n  overflow-y: scroll;\n\n  ::-webkit-scrollbar {\n    width: 4px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: var(--tertiary);\n    border-radius: 4px;\n  }\n\n  ::-webkit-scrollbar-track {\n    background-color: var(--secondary);\n  }\n`;\n\nexport const Role = styled.span`\n  margin-top: 20px;\n\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 500;\n  color: var(--gray);\n`;\n\nexport const User = styled.div`\n  margin-top: 5px;\n  padding: 5px;\n\n  display: flex;\n  align-items: center;\n\n  cursor: pointer;\n\n  border-radius: 4px;\n  background: transparent;\n  transition: background 0.2s;\n  &:hover {\n    background: rgba(255, 255, 255, 0.1);\n  }\n\n  > strong {\n    margin-left: 13px;\n    font-weight: 500;\n    color: var(--white);\n    opacity: 0.7;\n\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n  }\n\n  > span {\n    margin-left: 9px;\n\n    background-color: var(--discord);\n    color: var(--white);\n    border-radius: 4px;\n    padding: 4px 5px;\n\n    text-transform: uppercase;\n    font-weight: bold;\n    font-size: 11px;\n  }\n`;\n\nexport const Avatar = styled.div`\n  flex-shrink: 0;\n\n  width: 32px;\n  height: 32px;\n\n  border-radius: 50%;\n  background-color: var(--primary);\n\n  &.bot {\n    background-color: var(--mention-detail);\n  }\n`;\n","import React, { FC } from 'react';\n\nimport { Container, Role, User, Avatar } from './styles';\n\ninterface UserOptions {\n  displayName: string;\n  isBot?: boolean;\n}\n\nconst UserRow: FC<UserOptions> = ({ displayName, isBot }) => {\n  return (\n    <User>\n      <Avatar className={isBot ? 'bot' : ''} />\n\n      <strong>{displayName}</strong>\n\n      {isBot && <span>Bot</span>}\n    </User>\n  );\n};\n\nconst UserList: FC = () => {\n  return (\n    <Container>\n      <Role>Online - 1</Role>\n      <UserRow displayName=\"Almeida\" />\n\n      <Role>Offline - 10</Role>\n      <UserRow displayName=\"Almeida 2\" isBot />\n      <UserRow displayName=\"Almeida 3\" />\n      <UserRow displayName=\"Almeida 4\" />\n      <UserRow displayName=\"Almeida 5\" isBot />\n      <UserRow displayName=\"Almeida 6\" />\n      <UserRow displayName=\"Almeida 7\" />\n      <UserRow displayName=\"Almeida 8\" />\n      <UserRow displayName=\"Almeida 9\" isBot />\n      <UserRow displayName=\"Almeida 10\" />\n      <UserRow displayName=\"Almeida 11\" />\n    </Container>\n  );\n};\n\nexport default UserList;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n\n  padding: 4px 16px;\n  margin-right: 4px;\n\n  background-color: transparent;\n\n  &.mention {\n    background-color: var(--mention-message);\n\n    border-left: 2px solid var(--mention-detail);\n    padding-left: 14px;\n  }\n\n  & + div {\n    margin-top: 13px;\n  }\n`;\n\nexport const Avatar = styled.div`\n  width: 40px;\n  height: 40px;\n\n  background-color: var(--secondary);\n  border-radius: 50%;\n\n  &.bot {\n    background-color: var(--mention-detail);\n  }\n`;\n\nexport const Message = styled.div`\n  min-height: 40px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  margin-left: 17px;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  align-items: center;\n\n  > strong {\n    color: var(--white);\n    font-size: 16px;\n  }\n\n  > span {\n    margin-left: 6px;\n\n    background-color: var(--discord);\n    color: var(--white);\n    border-radius: 4px;\n    padding: 4px 5px;\n\n    text-transform: uppercase;\n    font-weight: bold;\n    font-size: 11px;\n  }\n\n  > time {\n    margin-left: 6px;\n    color: var(--gray);\n    font-size: 13px;\n  }\n`;\n\nexport const Content = styled.div`\n  text-align: left;\n  font-size: 14px;\n  color: var(--white);\n`;\n\nexport const Mention = styled.span`\n  color: var(--link);\n  cursor: pointer;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n","import React, { FC, ReactElement, ReactNode } from 'react';\n\nimport { Container, Avatar, Message, Header, Content } from './styles';\nexport { Mention } from './styles';\n\nexport interface MessageOptions {\n  author: string;\n  date: string;\n  content: string | ReactElement | ReactNode;\n  hasMention?: boolean;\n  isBot?: boolean;\n}\n\nconst ChannelMessage: FC<MessageOptions> = ({\n  author,\n  date,\n  content,\n  hasMention,\n  isBot,\n}) => {\n  return (\n    <Container className={hasMention ? 'mention' : ''}>\n      <Avatar className={isBot ? 'bot' : ''} />\n\n      <Message>\n        <Header>\n          <strong>{author}</strong>\n\n          {isBot ? <span>Bot</span> : ''}\n\n          <time>{date}</time>\n        </Header>\n\n        <Content>{content}</Content>\n      </Message>\n    </Container>\n  );\n};\n\nexport default ChannelMessage;\n","import styled from 'styled-components';\nimport { AlternateEmail } from 'styled-icons/material'\n\nexport const Container = styled.div`\n  grid-area: CD;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  background-color: var(--primary);\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: 44px;\n\n  padding: 0 10px 0 57px;\n  border-radius: 7px;\n\n  color: var(--white);\n  background-color: var(--chat-input);\n\n  position: relative;\n\n  ::-placeholder {\n    color: var(--gray);\n  }\n\n  ~ svg {\n    position: relative;\n    top: -50%;\n    left: 14px;\n    transition: 180ms ease-in-out;\n  }\n`;\n\nexport const InputIcon = styled(AlternateEmail)`\n  width: 24px;\n  height: 24px;\n\n  color: var(--gray);\n`;\n\nexport const InputWrapper = styled.div`\n  width: 100%;\n  padding: 0 16px;\n`;\n\nexport const Messages = styled.div`\n  padding: 20px 0;\n\n  display: flex;\n  flex-direction: column;\n\n  max-height: calc(100vh - 46px - 68px);\n  overflow-y: scroll;\n\n\n  ::-webkit-scrollbar {\n    width: 4px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: var(--tertiary);\n    border-radius: 4px;\n  }\n\n  ::-webkit-scrollbar-track {\n    background-color: var(--secondary);\n  }\n`;\n","import React, { FC, useEffect, useRef } from 'react';\n\nimport ChannelMessage, { Mention } from '../ChannelMessage';\n\nimport { Container, Input, InputIcon, InputWrapper, Messages } from './styles';\n\nconst ChannelData: FC = () => {\n  const messagesRef = useRef() as React.MutableRefObject<HTMLDivElement>\n\n  useEffect(() => {\n    const div = messagesRef.current\n\n    if (div) {\n      div.scrollTop = div.scrollHeight;\n    }\n  }, [messagesRef]);\n\n  return (\n    <Container>\n      <Messages ref={messagesRef}>\n        {Array.from(Array(15).keys()).map((n) => (\n          <ChannelMessage\n            key={n}\n            author='Almeida'\n            content='This is a test'\n            date='Today at 23:57'\n          />\n        ))}\n\n        <ChannelMessage\n          author='Almeida 2'\n          content='This is a test, but coming from a bot.'\n          date='Today at 23:58'\n          isBot\n        />\n\n        <ChannelMessage\n          author='Almeida 3'\n          content={\n            <>\n              <Mention>@Almeida</Mention> this is mention.\n            </>\n          }\n          date='Today at 23:59'\n          hasMention\n        />\n      </Messages>\n\n      <InputWrapper>\n        <Input type=\"text\" placeholder=\"Message #general\" />\n        <InputIcon />\n      </InputWrapper>\n    </Container>\n  );\n};\n\nexport default ChannelData;\n","import React, { FC } from 'react';\n\nimport { Grid } from './styles';\n\nimport GuildList from '../GuildList';\nimport GuildName from '../GuildName';\nimport ChannelInfo from '../ChannelInfo';\nimport ChannelList from '../ChannelList';\nimport UserInfo from '../UserInfo';\nimport UserList from '../UserList';\nimport ChannelData from '../ChannelData';\n\nconst Layout: FC = () => {\n  return (\n    <Grid>\n      <GuildList />\n      <GuildName />\n      <ChannelInfo />\n      <ChannelList />\n      <UserInfo />\n      <ChannelData />\n      <UserList />\n    </Grid>\n  );\n};\n\nexport default Layout;\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  html, body, #root {\n    height: 100%;\n  }\n\n  *, button, input {\n    border: 0;\n    outline: 0;\n\n    font-family: 'Roboto', sans-serif;\n  }\n\n  :root {\n    --primary: #36393f;\n    --secondary: #2f3136;\n    --tertiary: rgb(32,34,37);\n    --quaternary: #292b2f;\n    --quinary: #393d42;\n    --senary: #828386;\n\n    --white: #fff;\n    --gray: #8a8c90;\n    --chat-input: rgb(64,68,75);\n    --symbol: #74777a;\n\n    --notification: #f84a4b;\n    --discord: #6e86d6;\n    --mention-detail: #f9a839;\n    --mention-message: #413f3f;\n\n    --link: #5d80d6;\n  }\n`;\n","import React from 'react';\n\nimport Layout from './components/Layout';\n\nimport GlobalStyles from './styles/global';\n\nfunction App() {\n  return (\n    <>\n      <Layout />\n\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}